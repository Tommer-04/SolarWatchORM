// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarWatchORM.Data;

#nullable disable

namespace SolarWatchORM.Migrations
{
    [DbContext(typeof(SolarWatchContext))]
    [Migration("20240720183037_NullableModifications")]
    partial class NullableModifications
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SolarWatchORM.Data.CityData.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "England",
                            Latitude = 51.509864999999998,
                            Longitude = -0.118092,
                            Name = "London",
                            State = "London"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Hungary",
                            Latitude = 47.497912999999997,
                            Longitude = 19.040236,
                            Name = "Budapest",
                            State = "Pest"
                        },
                        new
                        {
                            Id = 3,
                            Country = "France",
                            Latitude = 48.864716000000001,
                            Longitude = 2.3490139999999999,
                            Name = "Paris",
                            State = "Paris"
                        });
                });

            modelBuilder.Entity("SolarWatchORM.Data.SunData.Sun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sunrise")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sunset")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("SunRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Sunrise = new DateTime(2024, 7, 18, 5, 30, 0, 0, DateTimeKind.Unspecified),
                            Sunset = new DateTime(2024, 7, 18, 20, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Sunrise = new DateTime(2024, 7, 18, 5, 45, 0, 0, DateTimeKind.Unspecified),
                            Sunset = new DateTime(2024, 7, 18, 20, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SolarWatchORM.Data.SunData.Sun", b =>
                {
                    b.HasOne("SolarWatchORM.Data.CityData.City", "City")
                        .WithMany("SunRecords")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SolarWatchORM.Data.CityData.City", b =>
                {
                    b.Navigation("SunRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
